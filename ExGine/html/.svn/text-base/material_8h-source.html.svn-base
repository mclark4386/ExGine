<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>material.h Source File</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.6 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
<h1>material.h</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="preprocessor">#ifndef __MATERIAL_H__</span>
<a name="l00002"></a>00002 <span class="preprocessor"></span><span class="preprocessor">#define __MATERIAL_H__</span>
<a name="l00003"></a>00003 <span class="preprocessor"></span>
<a name="l00004"></a>00004 <span class="preprocessor">#include "exogl.h"</span>
<a name="l00005"></a>00005 
<a name="l00006"></a>00006 <span class="keyword">class </span>Material
<a name="l00007"></a>00007 {
<a name="l00008"></a>00008 <span class="keyword">public</span>:
<a name="l00009"></a>00009     Material();
<a name="l00010"></a>00010     Material(GLfloat diffuse[4], GLfloat spec[4], GLfloat shin, GLfloat ambient[4], GLfloat emission[4]);
<a name="l00011"></a>00011     ~Material(){};
<a name="l00012"></a>00012     <span class="keywordtype">int</span> addToModel();
<a name="l00013"></a>00013     <span class="keywordtype">void</span> setDiffuse(GLfloat r, GLfloat g, GLfloat b, GLfloat a){diffuse[0]=r;diffuse[1]=g;diffuse[2]=b;diffuse[3]=a;}
<a name="l00014"></a>00014     <span class="keywordtype">void</span> setSpec(GLfloat r, GLfloat g, GLfloat b, GLfloat a){spec[0]=r;spec[1]=g;spec[2]=b;spec[3]=a;};
<a name="l00015"></a>00015     <span class="keywordtype">void</span> setShininess(GLfloat shin){shininess[0]=shin;};
<a name="l00016"></a>00016     <span class="keywordtype">void</span> setAmbient(GLfloat r, GLfloat g, GLfloat b, GLfloat a){ambient[0]=r;ambient[1]=g;ambient[2]=b;ambient[3]=a;};
<a name="l00017"></a>00017     <span class="keywordtype">void</span> setEmission(GLfloat r, GLfloat g, GLfloat b, GLfloat a){emission[0]=r;emission[1]=g;emission[2]=b;emission[3]=a;};
<a name="l00018"></a>00018         <span class="keywordtype">void</span> getDiffuse(GLfloat _diffuse[]){_diffuse[0]=diffuse[0];_diffuse[1]=diffuse[1];_diffuse[2]=diffuse[2];_diffuse[3]=diffuse[3];};
<a name="l00019"></a>00019         <span class="keywordtype">void</span> getSpec(GLfloat _spec[]){_spec[0]=spec[0];_spec[1]=spec[1];_spec[2]=spec[2];_spec[3]=spec[3];};
<a name="l00020"></a>00020         <span class="keywordtype">void</span> getShininess(GLfloat&amp; _shininess){_shininess = shininess[0];};
<a name="l00021"></a>00021         <span class="keywordtype">void</span> getAmbient(GLfloat _ambient[]){_ambient[0]=ambient[0];_ambient[1]=ambient[1];_ambient[2]=ambient[2];_ambient[3]=ambient[3];};
<a name="l00022"></a>00022         <span class="keywordtype">void</span> getEmission(GLfloat _emission[]){_emission[0]=emission[0];_emission[1]=emission[1];_emission[2]=emission[2];_emission[3]=emission[3];};
<a name="l00023"></a>00023 <span class="keyword">protected</span>:
<a name="l00024"></a>00024     GLfloat diffuse[4];
<a name="l00025"></a>00025     GLfloat spec[4];
<a name="l00026"></a>00026     GLfloat shininess[1];
<a name="l00027"></a>00027     GLfloat ambient[4];
<a name="l00028"></a>00028     GLfloat emission[4];
<a name="l00029"></a>00029 };
<a name="l00030"></a>00030 
<a name="l00031"></a>00031 <span class="keywordtype">int</span> Material::addToModel()
<a name="l00032"></a>00032 {
<a name="l00033"></a>00033     glMaterialfv(GL_FRONT, GL_DIFFUSE, diffuse);
<a name="l00034"></a>00034     glMaterialfv(GL_FRONT, GL_SPECULAR, spec);
<a name="l00035"></a>00035     glMaterialfv(GL_FRONT, GL_SHININESS, shininess);
<a name="l00036"></a>00036     glMaterialfv(GL_FRONT, GL_AMBIENT, ambient);
<a name="l00037"></a>00037     glMaterialfv(GL_FRONT, GL_EMISSION, emission);
<a name="l00038"></a>00038 
<a name="l00039"></a>00039     <span class="keywordflow">return</span> 0;
<a name="l00040"></a>00040 }
<a name="l00041"></a>00041 
<a name="l00042"></a>00042 Material::Material()
<a name="l00043"></a>00043 {
<a name="l00044"></a>00044     diffuse[0]=0.0;diffuse[1]=0.0;diffuse[2]=0.0;diffuse[3]=1.0;
<a name="l00045"></a>00045     <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0;i&lt;4;i++)
<a name="l00046"></a>00046     {
<a name="l00047"></a>00047         spec[i] = ambient[i] = emission[i] = diffuse[i];
<a name="l00048"></a>00048     }
<a name="l00049"></a>00049     shininess[0] = 5.0;
<a name="l00050"></a>00050 }
<a name="l00051"></a>00051 
<a name="l00052"></a>00052 Material::Material(GLfloat _diffuse[4], GLfloat _spec[4], GLfloat _shin, GLfloat _ambient[4], GLfloat _emission[4])
<a name="l00053"></a>00053 {
<a name="l00054"></a>00054     <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0;i&lt;4;i++)
<a name="l00055"></a>00055     {
<a name="l00056"></a>00056         diffuse[i] = _diffuse[i];
<a name="l00057"></a>00057         spec[i] = _spec[i];
<a name="l00058"></a>00058         ambient[i] = _ambient[i];
<a name="l00059"></a>00059         emission[i] = _emission[i];
<a name="l00060"></a>00060     }
<a name="l00061"></a>00061 shininess[0] = _shin;
<a name="l00062"></a>00062 }
<a name="l00063"></a>00063 <span class="preprocessor">#endif</span>
</pre></div></div>
<hr size="1"><address style="text-align: right;"><small>Generated on Sat Oct 18 10:41:37 2008 by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.6 </small></address>
</body>
</html>
